<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Mike Dane</title>
    <link>https://www.mikedane.com/web-development/javascript/</link>
    <description>Recent content in Javascript on Mike Dane</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Oct 2017 11:23:33 -0400</lastBuildDate>
    
	<atom:link href="https://www.mikedane.com/web-development/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Choosing An Ide</title>
      <link>https://www.mikedane.com/web-development/javascript/choosing-an-ide/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:33 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/choosing-an-ide/</guid>
      <description> Code Copy </description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://www.mikedane.com/web-development/javascript/hello-world/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/hello-world/</guid>
      <description> Code Copyalert(&amp;#34;Hello World&amp;#34;); document.write(&amp;#34;Hello World&amp;#34;); </description>
    </item>
    
    <item>
      <title>External Files</title>
      <link>https://www.mikedane.com/web-development/javascript/external-files/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/external-files/</guid>
      <description> Code Copy </description>
    </item>
    
    <item>
      <title>Writing HTML</title>
      <link>https://www.mikedane.com/web-development/javascript/writing-html/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/writing-html/</guid>
      <description>As we begin our programming journey in JavaScript, we&#39;ll start by paying homage to a tradition widely shared among new programmers, which is learning how to print text out onto the screen. As we learn to talk to computers using a programming language like JavaScript, it will help to know how to get them to talk back to us in the form of output, so let&#39;s take a look!</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>https://www.mikedane.com/web-development/javascript/variables/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/variables/</guid>
      <description>The topic of this lesson, is in fact one of the most fundamental and important topics in all of computer programming, and once you master it, you&#39;ll be well on your way to becoming a JavaScript developer!
The topic I&#39;m talking about is variables! Variables are a JavaScript developer&#39;s bread and butter. They make it really easy to write complex programs with lots and lots of instructions, and keep everything organized and straight.</description>
    </item>
    
    <item>
      <title>Strings</title>
      <link>https://www.mikedane.com/web-development/javascript/strings/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/strings/</guid>
      <description>Let&#39;s talk about text, or as it&#39;s known to programmers, strings! In this lesson we&#39;ll take a look at one of JavaScript&#39;s most powerful data types and how you can use them to write awesome programs. As you continue on your journey to becoming a JavaScript developer, one really useful skill you&#39;ll want to pickup along the way is the ability to work with strings in a variety of ways.</description>
    </item>
    
    <item>
      <title>Math</title>
      <link>https://www.mikedane.com/web-development/javascript/math/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/math/</guid>
      <description>Computers and numbers are like bread and butter. In fact the term computer actually used to refer to people who&#39;s job it was to do calculations and &#34;compute&#34; things all day. Needless to say we&#39;ve come a long way since then, and modern computers are capable of performing billions of calculations in the time it takes a normal human to even write a number down. Not to nerd out here too much, but when you get down to it, all computer instructions, all the code that we&#39;ve written in this course, and all the code that&#39;s currently running on your computer, is actually just a collection of complex patterns of 0s &amp;amp; 1s running through your processor.</description>
    </item>
    
    <item>
      <title>Getting User Input</title>
      <link>https://www.mikedane.com/web-development/javascript/getting-user-input/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/getting-user-input/</guid>
      <description>Throughout this course we&#39;ve taken a look at how we can make the computer give us information. We do this by using print statements. Print statements give us an idea of whats going on in the program at a given time, and are vital to writing good software. But what about the flip side, what happens when we want to give the computer some information? Almost all applications that you interact with on a daily basis will provide ways for you to give them information.</description>
    </item>
    
    <item>
      <title>Building A Calculator</title>
      <link>https://www.mikedane.com/web-development/javascript/building-a-calculator/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/building-a-calculator/</guid>
      <description> Code Copyvar num1 = window.prompt(&amp;#34;Num1: &amp;#34;); var num2 = window.prompt(&amp;#34;Num2: &amp;#34;); num1 = parseFloat(num1); num2 = parseFloat(num2); alert(num1 &amp;#43; num2); </description>
    </item>
    
    <item>
      <title>Arrays</title>
      <link>https://www.mikedane.com/web-development/javascript/arrays/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/arrays/</guid>
      <description>Up until this point in the course, we&#39;ve been working with different types of data, and generally we&#39;ve been using variables to store that data. Variables are great because we can take pieces of data that would otherwise be difficult to remember and keep track of and store them in a nice, named container. But variables as we&#39;ve seen them so far do have one short coming, and that&#39;s when it comes to storing large amounts of related data.</description>
    </item>
    
    <item>
      <title>Functions</title>
      <link>https://www.mikedane.com/web-development/javascript/functions/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/functions/</guid>
      <description>In this lesson I wanna talk to you about a really important concept in JavaScript which makes it really easy to keep our programs organized and re-usable. I&#39;m talking of course about Functions!
Maybe you&#39;ve heard the word Function floating around as you&#39;ve begun your programming journey, but today we&#39;re gonna break down exactly what they are and I&#39;ll show you how to use them in JavaScript.
Functions and Organization So far in this course we&#39;ve written a lot of code.</description>
    </item>
    
    <item>
      <title>Accessing Html Elements</title>
      <link>https://www.mikedane.com/web-development/javascript/accessing-html-elements/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/accessing-html-elements/</guid>
      <description> Code index.htmlCopy&amp;lt;h1 id=&amp;#34;myHeader&amp;#34; giraffe=&amp;#34;Giraffe Attr&amp;#34;&amp;gt;Mike Dane&amp;lt;/h1&amp;gt; &amp;lt;script src=&amp;#34;script.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; script.jsCopyvar header = document.getElementById(&amp;#34;myHeader&amp;#34;); header.style=&amp;#34;color:blue; background-color:red;&amp;#34; document.write( header.getAttribute(&amp;#34;giraffe&amp;#34;) ); header.innerHTML = &amp;#34;Elephant Academy&amp;#34;; </description>
    </item>
    
    <item>
      <title>Trigger Events</title>
      <link>https://www.mikedane.com/web-development/javascript/trigger-events/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/trigger-events/</guid>
      <description> Code Inline Event Listeners index.htmlCopy&amp;lt;h1 id=&amp;#34;myHeader&amp;#34; onclick=&amp;#34;handleClick(this)&amp;#34;&amp;gt;Mike Dane&amp;lt;/h1&amp;gt; &amp;lt;script src=&amp;#34;script.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; script.jsCopyfunction handleClick(element){ alert(&amp;#34;Clicked &amp;#34; &amp;#43; element.id); } Programatic Event Listeners index.htmlCopy&amp;lt;h1 id=&amp;#34;myHeader&amp;#34;&amp;gt;Mike Dane&amp;lt;/h1&amp;gt; &amp;lt;script src=&amp;#34;script.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; script.jsCopyvar header = document.getElementById(&amp;#34;myHeader&amp;#34;); header.addEventListener(&amp;#34;click&amp;#34;, function(){ alert(&amp;#34;You clicked &amp;#34; &amp;#43; header.id); }); </description>
    </item>
    
    <item>
      <title>Building A Messaging App</title>
      <link>https://www.mikedane.com/web-development/javascript/building-a-messaging-app/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/building-a-messaging-app/</guid>
      <description> Code index.htmlCopy&amp;lt;ul id=&amp;#34;messages&amp;#34;&amp;gt;&amp;lt;/ul&amp;gt; &amp;lt;input id=&amp;#34;textbox&amp;#34; type=&amp;#34;text&amp;#34;&amp;gt; &amp;lt;button id=&amp;#34;button&amp;#34;&amp;gt;Send&amp;lt;/button&amp;gt; &amp;lt;script src=&amp;#34;script.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; script.jsCopyvar messages = document.getElementById(&amp;#34;messages&amp;#34;); var textbox = document.getElementById(&amp;#34;textbox&amp;#34;); var button = document.getElementById(&amp;#34;button&amp;#34;); button.addEventListener(&amp;#34;click&amp;#34;, function(){ var newMessage = document.createElement(&amp;#34;li&amp;#34;); newMessage.innerHTML = textbox.value; messages.appendChild(newMessage); textbox.value = &amp;#34;&amp;#34;; }); </description>
    </item>
    
    <item>
      <title>If Statements</title>
      <link>https://www.mikedane.com/web-development/javascript/if-statements/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:35 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/if-statements/</guid>
      <description>Up to this point in the course we&#39;ve written some pretty cool programs! But in this lesson I want to introduce you to a concept that will allow our programs to be even more powerful. If statements are a special structure in JavaScript where we can actually allow our programs to make decisions.
By using an if statement, I could execute certain code when certain conditions are true, and I could execute other code when other conditions are true.</description>
    </item>
    
    <item>
      <title>If Statements (Cont)</title>
      <link>https://www.mikedane.com/web-development/javascript/if-statements-cont/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:35 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/if-statements-cont/</guid>
      <description> Code Copyvar isStudent = false; var isSmart = false; if(isStudent &amp;amp;&amp;amp; isSmart){ document.write(&amp;#34;You are a student&amp;#34;); } else if(isStudent &amp;amp;&amp;amp; !isSmart){ document.write(&amp;#34;You are not a smart student&amp;#34;); } else { document.write(&amp;#34;You are not a student and not smart&amp;#34;); } document.write(&amp;#34;&amp;lt;br&amp;gt;&amp;#34;); // &amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=, !=, == if(1 &amp;gt; 3){ document.write(&amp;#34;number comparison was true&amp;#34;); } document.write(&amp;#34;&amp;lt;br&amp;gt;&amp;#34;); if(&amp;#34;dog&amp;#34; != &amp;#34;dog&amp;#34;){ document.write(&amp;#34;string comparison was true&amp;#34;); } </description>
    </item>
    
    <item>
      <title>Switch Statements</title>
      <link>https://www.mikedane.com/web-development/javascript/switch-statements/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:35 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/switch-statements/</guid>
      <description>Much like if statements, which give your program the ability to make decision, switch statements can be used to infuse a bit of intelligence into any program. In fact, a switch statement is essentially a specialized version of an if statement which would otherwise have an excessive amount of ELSE IF type statements. Let&#39;s take a look at why they&#39;re used. Sometimes, when infusing logic into your programs you&#39;ll run into a situation where given the value of a certain piece of data, you&#39;ll want to do something different.</description>
    </item>
    
    <item>
      <title>Objects</title>
      <link>https://www.mikedane.com/web-development/javascript/objects/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:35 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/objects/</guid>
      <description> Code Copyvar student = { name: &amp;#34;Jim&amp;#34;, major: &amp;#34;Business&amp;#34;, age: 19, gpa: 2.5 }; student.name = &amp;#34;Andy&amp;#34; document.write( student.name &amp;#43; &amp;#34;&amp;lt;br&amp;gt;&amp;#34; ); document.write( student.major &amp;#43; &amp;#34;&amp;lt;br&amp;gt;&amp;#34; ); document.write( student.gpa &amp;#43; &amp;#34;&amp;lt;br&amp;gt;&amp;#34; ); </description>
    </item>
    
    <item>
      <title>Real World Objects</title>
      <link>https://www.mikedane.com/web-development/javascript/real-world-objects/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:35 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/real-world-objects/</guid>
      <description> Code Copyvar myMovie = { title: &amp;#34;The Social Network&amp;#34;, releaseYear: &amp;#34;2010&amp;#34;, duration: 2.0, actors: [ { name: &amp;#34;Jessie Eisenberg&amp;#34;, birthday: new Date(&amp;#34;October 5, 1983&amp;#34;), hometown: &amp;#34;New York, New York&amp;#34; }, { name: &amp;#34;Roonie Mara&amp;#34;, birthday: new Date(&amp;#34;April 17, 1985&amp;#34;), hometown: &amp;#34;Bedford New York&amp;#34; } ] }; </description>
    </item>
    
    <item>
      <title>While Loops</title>
      <link>https://www.mikedane.com/web-development/javascript/while-loops/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:35 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/while-loops/</guid>
      <description>There&#39;s an on-going gag on the popular show &#34;The Simpsons&#34;, where Bart Simpson is forced to write lines on the chalkboard over and over agian to teach him a lesson. One of my favorites features Bart writing &#34;I will not show off&#34; on the blackboard hundreds of times.
I&#39;ve always liked this gag, and I&#39;m excited to say that I can use it to help explain a programming concept.
In the episode, when Bart wrote all those lines, he was literally writing the same thing 500 times for the whole afternoon.</description>
    </item>
    
    <item>
      <title>Building A Password Checker</title>
      <link>https://www.mikedane.com/web-development/javascript/building-a-password-checker/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:35 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/building-a-password-checker/</guid>
      <description> Code Copyvar password = &amp;#34;wordpass&amp;#34;; var response; var entryCount = 0; var entryLimit = 3; var error = false; while(response != password &amp;amp;&amp;amp; !error){ if(entryCount &amp;lt; entryLimit){ response = window.prompt(&amp;#34;Enter Password&amp;#34;); entryCount&amp;#43;&amp;#43;; } else { error = true; } } if(error){ alert(&amp;#34;Too many entries&amp;#34;); } else { alert(&amp;#34;Success&amp;#34;); } </description>
    </item>
    
    <item>
      <title>For Loops</title>
      <link>https://www.mikedane.com/web-development/javascript/for-loops/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:35 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/for-loops/</guid>
      <description>The next type of loops were going to discuss are called for loops. For loops are actually just slightly modified versions of while loops which we looked at in a previous lesson. But for loops can make your life as a programmer a lot easier because they simplify a commonly used while loop structure.  The concept is the same a while loop, you’re checking some boolean expression on each iteration of the loop and executing a block of code if it’s true.</description>
    </item>
    
    <item>
      <title>Building A Quiz</title>
      <link>https://www.mikedane.com/web-development/javascript/building-a-quiz/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:35 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/building-a-quiz/</guid>
      <description>Code Copyvar questions = [ { prompt: &amp;#34;What color are apples?\n(a) Red/Green\n\ (b) Purple\n(c) Orange&amp;#34;, answer: &amp;#34;a&amp;#34; }, { prompt: &amp;#34;What color are Bananas?\n(a) Teal\n\ (b) Magenta\n(c) Yellow&amp;#34;, answer: &amp;#34;c&amp;#34; }, { prompt: &amp;#34;What color are strawberries?\n(a) Yellow\n\ (b) Red\n(c) Blue&amp;#34;, answer: &amp;#34;a&amp;#34; } ]; var score = 0; for(var i = 0; i &amp;lt; questions.length; i&amp;#43;&amp;#43;){ var response = window.prompt(questions[i].prompt); if(response == questions[i].answer){ score&amp;#43;&amp;#43;; alert(&amp;#34;Correct!&amp;#34;); } else { alert(&amp;#34;WRONG!</description>
    </item>
    
    <item>
      <title>2d Arrays &amp; Nested Loops</title>
      <link>https://www.mikedane.com/web-development/javascript/2d-arrays-nested-loops/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:35 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/2d-arrays-nested-loops/</guid>
      <description> Code CopynumberGrid = [ [1, 2], [3, 4] ]; numberGrid[0][1] = 99; document.write(numberGrid[0][0] &amp;#43; &amp;#34;&amp;lt;br&amp;gt;&amp;#34;); document.write(numberGrid[0][1] &amp;#43; &amp;#34;&amp;lt;br&amp;gt;&amp;#34;); for(var i = 0; i &amp;lt; numberGrid.length; i&amp;#43;&amp;#43;){ for(var j = 0; j &amp;lt; numberGrid[i].length; j&amp;#43;&amp;#43;){ document.write(numberGrid[i][j] &amp;#43; &amp;#34;, &amp;#34;); } document.write(&amp;#34;&amp;lt;br&amp;gt;&amp;#34;); } </description>
    </item>
    
    <item>
      <title>For Each Loops</title>
      <link>https://www.mikedane.com/web-development/javascript/for-each-loops/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:35 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/for-each-loops/</guid>
      <description> Code Copyvar luckyNums = [4, 8, 15, 16, 23, 42]; luckyNums.forEach(function(luckyNum){ document.write(luckyNum &amp;#43; &amp;#34;&amp;lt;br&amp;gt;&amp;#34;); }); </description>
    </item>
    
    <item>
      <title>Timing</title>
      <link>https://www.mikedane.com/web-development/javascript/timing/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:35 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/timing/</guid>
      <description> Code Copy&amp;lt;button onClick=&amp;#34;setTimeout(funcName, 3000)&amp;#34;&amp;gt;Click Me&amp;lt;/button&amp;gt; &amp;lt;button onClick=&amp;#34;setInterval(funcName, 3000)&amp;#34;&amp;gt;Click Me&amp;lt;/button&amp;gt; </description>
    </item>
    
    <item>
      <title>Web Storage</title>
      <link>https://www.mikedane.com/web-development/javascript/web-storage/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:36 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/web-storage/</guid>
      <description></description>
    </item>
    
    <item>
      <title>In One Video</title>
      <link>https://www.mikedane.com/web-development/javascript/in-one-video/</link>
      <pubDate>Sun, 22 Oct 2017 11:23:34 -0400</pubDate>
      
      <guid>https://www.mikedane.com/web-development/javascript/in-one-video/</guid>
      <description>JavaScript Overview Javascript is a high-level, dynamically typed and interpreted, programming language that was created in May of 1995 by Netscape employee Brendan Eich.
The language was famously created in only 10 days and adopted the name Javascript as a marketing play, playing off the hugly popular Java programming language. Although ironically the two languages are very different.
Javascript was built with the sole purpose of making websites more responsive and dynamic.</description>
    </item>
    
  </channel>
</rss>